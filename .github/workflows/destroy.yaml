name: 'tf-aks-destroy'
 
on:
  workflow_dispatch:
 
jobs:
  destroy:
    name: 'Destroy'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: "./terraform"
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Setup tfvars'
      run: |
        rm -f terraform.tfvars
        cat > terraform.tfvars << EOF
        appId    = "${{ env.ARM_CLIENT_ID }}"
        password = "${{ env.ARM_CLIENT_SECRET }}"
        EOF

    - uses: hashicorp/setup-terraform@v1

    - id: fmt
      run: terraform fmt -check
      continue-on-error: true
         
    - id: init
      run: terraform init
 
    - id: validate
      run: terraform validate -no-color
 
    - id: plan
      run: terraform plan -destroy -no-color
      # continue-on-error: true

    - id: destroy
      run: terraform destroy -auto-approve -lock=false

